CREATE TABLE EDU_EVENT_TYPES (
  ET_ID NUMBER,
  ET_NAME VARCHAR2 (4000),
  PRIMARY KEY (ET_ID)
);

CREATE TABLE EDU_USER_ROLES (
  UR_ID NUMBER,
  UR_NAME VARCHAR(4000),
  PRIMARY KEY(UR_ID)
);

CREATE TABLE EDU_USERS (
  U_ID NUMBER,
  U_FIRSTNAME VARCHAR2(4000),
  U_LASTNAME VARCHAR2(4000),
  U_EMAIL VARCHAR2(4000) UNIQUE,
  U_PASSWORD VARCHAR2(4000),
  U_ROLE NUMBER,
  PRIMARY KEY(U_ID)
);

CREATE TABLE EDU_STUDENTS (
  S_ID NUMBER,
  S_FIRSTNAME VARCHAR2(4000),
  S_LASTNAME VARCHAR2(4000),
  S_ACTIVE BOOLEAN,
  T_ID NUMBER,
  P_ID NUMBER,
  PRIMARY KEY(S_ID),
  FOREIGN KEY(T_ID) REFERENCES EDU_USERS(U_ID),
  FOREIGN KEY(P_ID) REFERENCES EDU_USERS(U_ID)
);

CREATE TABLE EDU_MEETINGS (
  M_ID NUMBER,
  M_DATE TIMESTAMP(6),
  T_ID NUMBER,
  P_ID NUMBER,
  M_REASON VARCHAR2(4000),
  M_T_APPROVED BOOLEAN,
  M_P_APPROVED BOOLEAN,
  PRIMARY KEY (M_ID),
  FOREIGN KEY(T_ID) REFERENCES EDU_USERS(U_ID),
  FOREIGN KEY(P_ID) REFERENCES EDU_USERS(U_ID)
);

CREATE TABLE EDU_EVENTS (
  E_ID NUMBER,
  E_NAME VARCHAR2(4000),
  E_DESCRIPTION VARCHAR2(4000),
  E_DATE TIMESTAMP(6),
  ET_ID NUMBER,
  PRIMARY KEY(E_ID),
  FOREIGN KEY(ET_ID) REFERENCES EDU_EVENT_TYPES(ET_ID)
);

CREATE TABLE EDU_EVENT_STUDENT (
  E_ID NUMBER,
  S_ID NUMBER,
  PRIMARY KEY(E_ID, S_ID),
  FOREIGN KEY(E_ID) REFERENCES EDU_EVENTS(E_ID),
  FOREIGN KEY(S_ID) REFERENCES EDU_STUDENTS(S_ID)
);

CREATE TABLE EDU_PHOTOS (
  P_ID NUMBER,
  P_PHOTO VARCHAR2(4000),
  E_ID NUMBER,
  PRIMARY KEY(P_ID),
  FOREIGN KEY(E_ID) REFERENCES EDU_EVENTS(E_ID)
);

CREATE TABLE EDU_REPORT_CARD (
  RC_ID NUMBER,
  T_ID NUMBER,
  S_ID NUMBER,
  RC_GRADE VARCHAR(3),
  RC_DATE TIMESTAMP(6),
  PRIMARY KEY(RC_ID),
  FOREIGN KEY(T_ID) REFERENCES EDU_USERS(U_ID),
  FOREIGN KEY(S_ID) REFERENCES EDU_STUDENTS(S_ID)
);

CREATE TABLE EDU_BADGES (
  B_ID NUMBER,
  B_DESCRIPTION VARCHAR2(4000),
  B_PHOTO VARCHAR2(4000),
  PRIMARY KEY(B_ID)
);

CREATE TABLE EDU_BADGE_STUDENT (
  B_ID NUMBER,
  S_ID NUMBER,
  PRIMARY KEY(B_ID, S_ID),
  FOREIGN KEY(B_ID) REFERENCES EDU_BADGES(B_ID),
  FOREIGN KEY(S_ID) REFERENCES EDU_STUDENTS(S_ID)
);

CREATE TABLE EDU_ATTENDANCE (
  A_ID NUMBER,
  A_DATE TIMESTAMP(6),
  T_ID NUMBER,
  PRIMARY KEY(A_ID),
  FOREIGN KEY(T_ID) REFERENCES EDU_USERS(U_ID)
);

CREATE TABLE EDU_ATTENDANCE_STUDENT (
  A_ID NUMBER,
  S_ID NUMBER,
  PRIMARY KEY(A_ID, S_ID),
  FOREIGN KEY(A_ID) REFERENCES EDU_ATTENDANCE(A_ID),
  FOREIGN KEY(S_ID) REFERENCES EDU_STUDENTS(S_ID)
);

CREATE SEQUENCE user_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE student_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE meeting_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE event_sequence
  START WITH 1
  INCREMENT BY 1;

CREATE SEQUENCE photo_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE rc_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE badge_sequence
  START WITH 1
  INCREMENT BY 1;
  
CREATE SEQUENCE attendance_sequence
  START WITH 1
  INCREMENT BY 1;